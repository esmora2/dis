version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: sisdb2025
    ports:
      - "3307:3306"
    volumes:
      - db_data_mysql:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=admin || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15.3
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: sisdb2025
    ports:
      - "5433:5432"
    volumes:
      - db_data_postgres:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  cursos:
    build:
      context: ./cursos/cursos
      dockerfile: Dockerfile
    container_name: cursos-container
    ports:
      - "8002:8002"
    environment:
      DB_HOST: mysql
      DB_DATABASE: sisdb2025
      DB_USER: root
      DB_PASS: admin
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  estudiantes:
    build:
      context: ./estudiantes/estudiantes
      dockerfile: Dockerfile
    container_name: estudiantes-container
    ports:
      - "8003:8003"
    environment:
      DB_HOST: postgres
      DB_DATABASE: sisdb2025
      DB_USER: postgres
      DB_PASS: admin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-container
    ports:
      - "3000:80"
    depends_on:
      - cursos
      - estudiantes
    networks:
      - app-network

volumes:
  db_data_mysql:
  db_data_postgres:

networks:
  app-network:
    driver: bridge